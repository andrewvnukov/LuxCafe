<Window x:Class="LuxCafe.MainMenu"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LuxCafe"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"

        mc:Ignorable="d"
        
        Title="MainWindow" Height="600" Width="800" MinHeight="650" MinWidth="500"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource PrimaryThemeGrey}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        WindowStartupLocation="CenterScreen"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="ItemsControl.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="InvisibleButton" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4,16,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (wpf:ButtonAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <ProgressBar x:Name="ProgressBar" Background="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderBrush="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{Binding (wpf:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (wpf:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource Mode=TemplatedParent}}" Maximum="{Binding (wpf:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource Mode=TemplatedParent}}" Minimum="{Binding (wpf:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource Mode=TemplatedParent}}" Opacity="{Binding (wpf:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (wpf:ButtonProgressAssist.Value), RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center" Visibility="{Binding (wpf:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, Mode=FindAncestor}}">
                                <ProgressBar.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth"/>
                                        <Binding ElementName="border" Path="ActualHeight"/>
                                        <Binding ElementName="border" Path="CornerRadius"/>
                                        <Binding ElementName="border" Path="BorderThickness"/>
                                    </MultiBinding>
                                </ProgressBar.Clip>
                            </ProgressBar>
                            <wpf:Ripple ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth"/>
                                        <Binding ElementName="border" Path="ActualHeight"/>
                                        <Binding ElementName="border" Path="CornerRadius"/>
                                        <Binding ElementName="border" Path="BorderThickness"/>
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" Value="0,1,1,1"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0.1,0.5">
                                            <GradientStop Color="#24292D" Offset="0"/>
                                            <GradientStop Color="#2A9F8F" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0.2,0.5" Opacity="0.5">
                                            <GradientStop Color="#24292D" Offset="0"/>
                                            <GradientStop Color="#2A9F8F" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.38"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="TextBlock.FontWeight" Value="Medium"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="wpf:ButtonAssist.CornerRadius" Value="15"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorBackground" Value="Transparent"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="wpf:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="wpf:ButtonProgressAssist.Opacity" Value=".4"/>
            <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource PrimaryHueMidBrush}"/>
        </Style>
        <Style x:Key="MaterialDesignNavigationRailTabItem" TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="Height" Value="72"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="wpf:DialogHost.RestoreFocusElement" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabControl}, Mode=FindAncestor}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="Root" Cursor="Hand">
                            <Grid>
                                <Border x:Name="MouseOverBorder" Background="{TemplateBinding Background}" CornerRadius="{Binding (wpf:NavigationRailAssist.SelectionCornerRadius), RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Opacity=".08" Visibility="Hidden"/>
                                <wpf:ColorZone x:Name="colorZone" Background="{x:Null}" Cursor="Hand" Foreground="{Binding (wpf:ColorZoneAssist.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="False" HorizontalAlignment="Stretch" Mode="{Binding (wpf:ColorZoneAssist.Mode), RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Stretch">
                                    <wpf:Ripple x:Name="contentPresenter" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ClipToBounds="True" Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Focusable="False" TextBlock.FontWeight="Medium" TextBlock.FontSize="15" HorizontalContentAlignment="Center" Opacity=".52" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="Center">
                                        <wpf:Ripple.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding ElementName="MouseOverBorder" Path="ActualWidth"/>
                                                <Binding ElementName="MouseOverBorder" Path="ActualHeight"/>
                                                <Binding ElementName="MouseOverBorder" Path="CornerRadius"/>
                                                <Binding ElementName="MouseOverBorder" Path="BorderThickness"/>
                                            </MultiBinding>
                                        </wpf:Ripple.Clip>
                                    </wpf:Ripple>
                                </wpf:ColorZone>
                            </Grid>
                            <Border x:Name="SelectionHighlightBorder" Visibility="Hidden">
                                <Border x:Name="PART_BackgroundSelection" Background="{TemplateBinding Background}" CornerRadius="{Binding (wpf:NavigationRailAssist.SelectionCornerRadius), RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" IsHitTestVisible="False" Opacity="0.12"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.38"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="Root" Value="True">
                                <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                                <Setter Property="wpf:RippleAssist.IsDisabled" TargetName="contentPresenter" Value="True"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="wpf:ColorZoneAssist.Mode" Value="Standard"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="contentPresenter" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </MultiTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                    <Condition Binding="{Binding (wpf:NavigationRailAssist.ShowSelectionBackground), RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="SelectionHighlightBorder" Value="Visible"/>
                            </MultiDataTrigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="Standard">
                                <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignBody}"/>
                            </Trigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="PrimaryMid">
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="PrimaryLight">
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="PrimaryDark">
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="SecondaryLight">
                                <Setter Property="Background" Value="{DynamicResource SecondaryHueLightForegroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueLightForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="SecondaryMid">
                                <Setter Property="Background" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="SecondaryDark">
                                <Setter Property="Background" Value="{DynamicResource SecondaryHueDarkForegroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueDarkForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="Custom">
                                <Setter Property="Background" Value="{Binding (wpf:ColorZoneAssist.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Setter Property="BorderBrush" Value="{Binding (wpf:ColorZoneAssist.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="72"/>
            <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}"/>
        </Style>
        <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignNavigationRailTabItem}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="TabStripPlacement" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <DockPanel Background="{TemplateBinding Background}">
                            <Grid x:Name="TabGrid" DockPanel.Dock="Left" SnapsToDevicePixels="True">
                                <wpf:Card x:Name="shadowCard" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="{TemplateBinding BorderThickness}" UniformCornerRadius="0" Visibility="Visible"/>
                                <wpf:ColorZone x:Name="PART_HeaderCard" Background="{Binding (wpf:ColorZoneAssist.Background), RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{Binding (wpf:ColorZoneAssist.Foreground), RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="False" Mode="{Binding (wpf:ColorZoneAssist.Mode), RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Stretch">
                                    <Grid Background="{Binding Background, ElementName=PART_HeaderCard}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <ContentPresenter x:Name="FloatingContentPanel" Grid.Column="0" Content="{Binding (wpf:NavigationRailAssist.FloatingContent), RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="False" HorizontalAlignment="Center" Grid.Row="0" VerticalAlignment="Center"/>
                                        <UniformGrid x:Name="HeaderPanel" Columns="1" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsItemsHost="True" Grid.Row="1" Rows="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Rectangle x:Name="DividerRect" Fill="{DynamicResource MaterialDesignDivider}" HorizontalAlignment="Right" Height="Auto" Grid.RowSpan="2" Visibility="Collapsed" Width="1"/>
                                    </Grid>
                                </wpf:ColorZone>
                            </Grid>
                            <wpf:ColorZone x:Name="PART_HeaderCardSelectedContent" Background="{x:Null}" Foreground="{DynamicResource MaterialDesignBody}" HorizontalAlignment="Stretch" Mode="Standard" Padding="{TemplateBinding Padding}" VerticalAlignment="Stretch">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Focusable="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </wpf:ColorZone>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="wpf:ElevationAssist.Elevation" Value="Dp0">
                                <Setter Property="Visibility" TargetName="DividerRect" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="shadowCard" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="wpf:ColorZoneAssist.Mode" Value="Standard">
                                <Setter Property="Background" TargetName="PART_HeaderCard" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Top">
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="Bottom"/>
                                <Setter Property="Grid.ColumnSpan" TargetName="DividerRect" Value="2"/>
                                <Setter Property="Grid.RowSpan" TargetName="DividerRect" Value="1"/>
                                <Setter Property="Height" TargetName="DividerRect" Value="1"/>
                                <Setter Property="HorizontalAlignment" TargetName="DividerRect" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" TargetName="DividerRect" Value="Bottom"/>
                                <Setter Property="Width" TargetName="DividerRect" Value="Auto"/>
                                <Setter Property="Columns" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Rows" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="DockPanel.Dock" TargetName="TabGrid" Value="Top"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="BorderThickness" Value="0,1,0,0"/>
                                <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="Top"/>
                                <Setter Property="Grid.ColumnSpan" TargetName="DividerRect" Value="2"/>
                                <Setter Property="Grid.RowSpan" TargetName="DividerRect" Value="1"/>
                                <Setter Property="Height" TargetName="DividerRect" Value="1"/>
                                <Setter Property="HorizontalAlignment" TargetName="DividerRect" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" TargetName="DividerRect" Value="Top"/>
                                <Setter Property="Width" TargetName="DividerRect" Value="Auto"/>
                                <Setter Property="Columns" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Rows" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="DockPanel.Dock" TargetName="TabGrid" Value="Bottom"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="BorderThickness" Value="1,0,0,0"/>
                                <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="Left"/>
                                <Setter Property="HorizontalAlignment" TargetName="DividerRect" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="TabGrid" Value="Right"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="wpf:ElevationAssist.Elevation" Value="Dp0"/>
            <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}"/>
            <Setter Property="wpf:ShadowAssist.ShadowEdges" Value="Right"/>
        </Style>
    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Margin="10,10,5,10" Background="{DynamicResource SecondaryThemeGrey}" CornerRadius="20">
            <TabControl Grid.Row="0" TabStripPlacement="Left" Style="{DynamicResource TabControlStyle1}" Background="#00000000">
                
                <TabItem Width="175" Height="165">
                    <TabItem.Header>
                        <Border CornerRadius="20">
                        <StackPanel Orientation="Vertical">
                            <materialDesign:PackIcon Kind="Human" Width="150" HorizontalAlignment="Center" Height="60"/>
                            <TextBlock Style="{DynamicResource MaterialDesignTextBlock}" Foreground="{DynamicResource DefaultText}" Text="Какой-то еблан" HorizontalAlignment="Center"/>
                            <TextBlock Style="{DynamicResource MaterialDesignTextBlock}" Foreground="{DynamicResource DefaultText}" Text="Какая-то должность" HorizontalAlignment="Center" FontSize="12"/>
                        </StackPanel>
                        </Border>
                    </TabItem.Header>
                    <TabItem.Content>
                        <Frame Source="/menu.xaml" />
                    </TabItem.Content>
                </TabItem>
                <TabItem>
                    asdasdasd
                </TabItem>

            </TabControl>
        </Border>
        <Button Grid.Row="1" Margin="0,0,0,10" Width="120" HorizontalAlignment="Center" Height="45" VerticalAlignment="Bottom" Click="ExitButton_Click" >
            <materialDesign:PackIcon Kind="ArrowLeft"/>
        </Button>
    </Grid>
</Window>
