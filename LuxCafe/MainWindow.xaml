<Window x:Class="LuxCafe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LuxCafe"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"

        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800" MinHeight="650" MinWidth="500"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource PrimaryThemeGrey}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        WindowStartupLocation="CenterScreen"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="ItemsControl.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MaterialDesignFlatButton" TargetType="{x:Type ButtonBase}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4,16,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="20"/>
                            <ProgressBar x:Name="ProgressBar" Background="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderBrush="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{Binding (wpf:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (wpf:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource Mode=TemplatedParent}}" Maximum="{Binding (wpf:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource Mode=TemplatedParent}}" Minimum="{Binding (wpf:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource Mode=TemplatedParent}}" Opacity="{Binding (wpf:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (wpf:ButtonProgressAssist.Value), RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center" Visibility="{Binding (wpf:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, Mode=FindAncestor}}">
                                <ProgressBar.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth"/>
                                        <Binding ElementName="border" Path="ActualHeight"/>
                                        <Binding ElementName="border" Path="CornerRadius"/>
                                        <Binding ElementName="border" Path="BorderThickness"/>
                                    </MultiBinding>
                                </ProgressBar.Clip>
                            </ProgressBar>
                            <wpf:Ripple ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth"/>
                                        <Binding ElementName="border" Path="ActualHeight"/>
                                        <Binding ElementName="border" Path="CornerRadius"/>
                                        <Binding ElementName="border" Path="BorderThickness"/>
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource SecondaryAccentGreen}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.38"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="TextBlock.FontWeight" Value="Medium"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="wpf:ButtonAssist.CornerRadius" Value="2"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorBackground" Value="Transparent"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="wpf:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="wpf:ButtonProgressAssist.Opacity" Value=".4"/>
            <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource PrimaryHueMidBrush}"/>
        </Style>
        <Style x:Key="AutorizeButton" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource SecondaryHueMidBrush}"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
            <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource SecondaryHueMidBrush}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="2*" MinWidth="300" MaxWidth="400"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" MinHeight="50"/>
            <RowDefinition Height="7*" MinHeight="400" MaxHeight="500"/>
            <RowDefinition Height="1*" MinHeight="50"/>
        </Grid.RowDefinitions>
        <Border Grid.Column="1" Grid.Row="1" Background="{DynamicResource SecondaryThemeGrey}" CornerRadius="20,20,20,20">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Авторизация" Style ="{DynamicResource MaterialDesignHeadline4TextBlock}" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground = "{DynamicResource DefaultText}" Height="56" Width="248" Margin="0,10,0,0"/>
                <TextBlock Width="250" Text="Логин" Style ="{DynamicResource MaterialDesignHeadline5TextBlock}" Foreground="{DynamicResource DefaultText}" Grid.Row="1" HorizontalAlignment="Center" Margin="10,0,10,57" Height="40" TextAlignment="Left" VerticalAlignment="Bottom"/>
                <TextBlock Width="250" Text="Пароль" Style ="{DynamicResource MaterialDesignHeadline5TextBlock}" Foreground="{DynamicResource DefaultText}" Grid.Row="2" HorizontalAlignment="Center" Margin="10,0,10,57" Height="40" TextAlignment="Left" VerticalAlignment="Bottom"/>
                <Border BorderBrush="{DynamicResource AccentGreen}" BorderThickness="2" CornerRadius="15" Grid.Row="1" HorizontalAlignment="Center"  Margin="10,0,10,10" VerticalAlignment="Bottom">
                    <TextBox Name="LoginTextBox" Text="Дмитрий Ильиных" Style="{DynamicResource MaterialDesignDataGridComboBoxEditableTextBox}" CaretBrush="{DynamicResource AccentGreen}" SelectionBrush="{DynamicResource AccentGreen}" Foreground="{DynamicResource DefaultText}" Width="250" Height="Auto" Margin="5" Cursor="Hand" BorderThickness="0,0,0,0" IsTabStop="False" AllowDrop="True" FontSize="14" HorizontalAlignment="Left"/>
                </Border>
                <Border BorderBrush="{DynamicResource AccentGreen}" BorderThickness="2" CornerRadius="15" Grid.Row="2" HorizontalAlignment="Center"  Margin="10,0,10,10" VerticalAlignment="Bottom" AllowDrop="True">
                    <PasswordBox Name="PasswordTextBox" CaretBrush="{DynamicResource AccentGreen}" SelectionBrush="{DynamicResource AccentGreen}" Foreground="{DynamicResource DefaultText}"  Width="250" Height="Auto" Margin="5" Cursor="Hand" BorderThickness="0,0,0,0" AutomationProperties.HelpText="Пароль" IsTabStop="False" FontSize="14" ToolTip="Пароль" HorizontalAlignment="Left" Password="12345678"/>
                </Border>
                <Button Style="{DynamicResource AutorizeButton}" Background ="{DynamicResource AccentGreen}" Foreground="{DynamicResource DefaultText}" Content="Авторизация" HorizontalAlignment="Center" Height="45" Width="264" Cursor="Hand" Click="Autorization_Click" VerticalAlignment="Center" Grid.Row="3" FontWeight="SemiBold" FontSize="16" FontStretch="SemiCondensed" Margin="0,0,0,0"/>
            </Grid>
        </Border>
    </Grid>
</Window>
